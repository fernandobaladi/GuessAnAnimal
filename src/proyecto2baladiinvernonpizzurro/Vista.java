/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2baladiinvernonpizzurro;

import javax.swing.JOptionPane;

/**
 *
 * @author Fernando Baladi
 */
public class Vista extends javax.swing.JFrame {

    
    private Arbol arbol = new Arbol();
    
    NodoArbol nodoAuxiliar; //para guardar el ultimo nodo en el que se quedo, para poder desconectarlo del arbol
    //y conectarlo de nuevo pero con el arbol actualizado
    
    boolean ultimaOpcionEscogida = false; // true es derecha, false es izquierda
    
    /**
     * Creates new form Vista
     */
    public Vista() {
        
        initComponents();
        
        NodoArbol nodoHijo = new NodoArbol("*Ratón");
        NodoArbol nodoHijo2 = new NodoArbol("*Paloma");
        
        
        /*
        Con esto se empieza a ver que si la respuesta es afirmativa el árbol 
        va a la derecha y si es negativa a la izquierda
        NOTA IMPORTANTE: 0 ES NEGATIVO Y 1 ES AFIRMATIVO
        */
        
        arbol.InsertarNodoRaíz("¿Vuela?");
        arbol.InsertarNodoALaIzquierda(arbol.getNodoRaíz(), nodoHijo);
        arbol.InsertarNodoALaDerecha(arbol.getNodoRaíz(), nodoHijo2);
        
        jTextField1.setText(arbol.getNodoRaíz().getData());
        
        
        nodoAuxiliar = arbol.getNodoRaíz();//inicialmente es la raiz del arbol
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Sí");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("No");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(84, 84, 84))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(96, 96, 96))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void formarElArbol(boolean ultimaEscogida, int opcionEscogida) {
        
        String texto = arbol.RecorrerPorPreguntas(jTextField1.getText(), opcionEscogida);
        jTextField1.setText(texto);
        ultimaOpcionEscogida = ultimaEscogida;
        
        
        if (jTextField1.getText().charAt(0) == '*') {//ese asterico es para verificar si es el ultimo nodo del arbol
            //se puede sustituir por un espacio para que no se vea, pero por ahora le puse eso.
            
            NodoArbol nodo = arbol.Buscar(arbol.getNodoRaíz(), texto);
            
            /* Con esto le preguntaremos al usuario si está bien o no la respuesta*/
            Object[] options = {"No mi pana", "Pos claro"};


            int n = JOptionPane.showOptionDialog(rootPane,
                    "¿Es ese el animal en el que pensaste?",
                    "A Silly Question",
                    /*Se deja a YES_NO_OPTION para NO porque devolverá 0 y a 
                    QUESTION_MESSAGE como Sí porque devuelve 1*/
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[0]);



            if (n == JOptionPane.YES_OPTION) {

                /*Cuando responde que No es correcta la respuesta entra aquí y le 
                pregunta con este JOptionPane de tipo Input cuál es la respuesta correcta*/

                System.out.println(n);
                String response = JOptionPane.showInputDialog( "¿Qué animal era?");
                
                response = "*"+response; // aqui le anado el asterico para luego saber que es el ultimo nodo
                
                if ((response != null) && (response.length() > 0)) {

                    /*Si Presiona aceptar entra en este if*/
                    
                    String diferencia = JOptionPane.showInputDialog( "¿Qué diferencia a un " + nodo.getData() + " de un " + response);
                    
                    String respuestaEscogida = JOptionPane.showInputDialog("Si el animal fuera un " + nodo.getData() + " cuál sería la respuesta?"
                            + " (s para 'si' y n para 'n')");
                    //respuesta escogida puede ser "s" o "n"
                    
                    
                    //ESTO ES UN EJEMPLO DE COMO LO PUEDE RESPONDER EL USUARIO
                    //response = pato
                    //diferencia = puede nadar
                    //respuestaEscogida = n, porque el raton no nada
                    //nodoAuxiliar es la raiz en el primer caso
                    
                    NodoArbol nuevoNodo = new NodoArbol(diferencia);
                    
                    if (ultimaOpcionEscogida == false) {
                        
                        arbol.Buscar(arbol.getNodoRaíz(), nodoAuxiliar.getData()).setHijoIzquierdo(null);
                        arbol.Buscar(arbol.getNodoRaíz(), nodoAuxiliar.getData()).setHijoIzquierdo(nuevoNodo);
                    
                    } else {
                        arbol.Buscar(arbol.getNodoRaíz(), nodoAuxiliar.getData()).setHijoDerecho(null);
                        arbol.Buscar(arbol.getNodoRaíz(), nodoAuxiliar.getData()).setHijoDerecho(nuevoNodo);
                    }
                    
                    if (respuestaEscogida.equals("n")) {
                        nuevoNodo.setHijoIzquierdo(nodo);
                        NodoArbol otroHijo = new NodoArbol(response);
                        nuevoNodo.setHijoDerecho(otroHijo);
                        
                    } else {
                        NodoArbol otroHijo = new NodoArbol(response);
                        nuevoNodo.setHijoIzquierdo(otroHijo);
                        nuevoNodo.setHijoDerecho(nodo);    
                    }
                    
                    
                    jTextField1.setText(arbol.getNodoRaíz().getData());

                }

            } else if (n == JOptionPane.NO_OPTION) {

                System.out.println("Respuesta: SI");
                jTextField1.setText(arbol.getNodoRaíz().getData());

            } else {
                
            }
        
            
            
        } else {//if grande
            nodoAuxiliar = arbol.Buscar(arbol.getNodoRaíz(), texto);
        }
    }
    
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        formarElArbol(true, 1);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        formarElArbol(false, 0);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
